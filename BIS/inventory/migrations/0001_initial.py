# Generated by Django 3.1 on 2021-06-25 12:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import inventory.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('suppliers', '0003_auto_20210130_1217'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryImag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, help_text='Inventory image', null=True, upload_to=inventory.models.inventory_imag_directory_path)),
            ],
            options={
                'verbose_name': 'Inventory Image',
                'verbose_name_plural': 'Inventory Images',
            },
        ),
        migrations.CreateModel(
            name='InventoryPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_per_unit', models.FloatField()),
                ('number_of_unit', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='InventoryReturn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('num_returned', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PayInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='PaymentSalesTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config', models.CharField(help_text='Specify name for this setting', max_length=100)),
                ('terms', models.IntegerField(choices=[(0, 'Pay CASH'), (1, 'Cash On Demand'), (2, 'Due in number of days'), (3, 'Due at the end of month'), (4, 'Due on the next Month'), (5, 'let me specify the due date DD-MM-YYY')], default=0)),
                ('num_of_days_due', models.PositiveSmallIntegerField(help_text='in case of you want to specify number of days due')),
                ('discount_in_days', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(32)])),
                ('discount_percentage', models.FloatField(help_text='Enter discount like this 5%>>will be  5 not 0.05')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'UNPAID'), (1, 'PAID')])),
                ('num', models.IntegerField()),
                ('purchase_date', models.DateTimeField()),
                ('due_date', models.DateField(blank=True, help_text='optional if you want to specify it by yourself', null=True)),
                ('frieght_in', models.FloatField(default=0)),
                ('num_returend', models.IntegerField(blank=True, null=True)),
                ('cost_returned', models.FloatField(blank=True, null=True)),
                ('total_purchases', models.FloatField(blank=True, null=True)),
                ('net_purchases', models.FloatField(blank=True, null=True)),
                ('total_amount_paid', models.FloatField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suppliers.supplier')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.paymentsalesterm')),
            ],
        ),
    ]
